version: "3"
services:
  app:
    container_name: app
    restart: always
    build: .
    command: >
      bash -c
      "python manage.py collectstatic --no-input && python manage.py makemigrations && python manage.py migrate && python manage.py runworker default"
    volumes:
      - .:/code
      - static-volume:/code/static
      - media-volume:/code/mediai
    depends_on:
      - db
      - redis
    links:
      - redis
    networks:
      - web_network
      - db_network
    environment:
      - REDIS_HOST=redis
  gunicorn:
    container_name: gunicorn
    build: .
    command: bash -c "gunicorn -w 4 -k gthread -b 0.0.0.0:8000 thu_lost_and_found_backend.wsgi"
    expose:
      - "8000"
    depends_on:
      - app
    networks:
      - web_network
      - db_network
    volumes:
      - .:/code
  daphne:
    container_name: daphne
    build: .
    command: bash -c "daphne -b 0.0.0.0 -p 8001  thu_lost_and_found_backend.asgi:application"
    expose:
      - "8001"
    environment:
      - REDIS_HOST=redis
    depends_on:
      - app
    links:
      - redis
    networks:
      - web_network
      - db_network
    volumes:
      - .:/code
  redis:
    container_name: redis
    restart: always
    image: redis:latest
    expose:
      - "6379"
    networks:
      - db_network
  db:
    container_name: ${DB_HOST}
    image: mysql:latest
    env_file: .env
#    volumes:
#      - ./mysql:/var/lib/mysql
    expose:
      - "3306"
    restart: always
    environment:
      - MYSQL_DATABASE=${DB_DATABASE}
      - MYSQL_USER=${DB_USERNAME}
      - MYSQL_ROOT_PASSWORD=${DB_PASSWORD}
      - TZ=Asia/Shanghai
    command: ['mysqld', '--character-set-server=utf8mb4', '--collation-server=utf8mb4_unicode_ci']
    networks:
      - db_network
  nginx:
    container_name: nginx
    restart: always
    image: nginx:latest
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - static-volume:/code/static
      - media-volume:/code/media
      - ./config/nginx:/etc/nginx/conf.d
      - ./config/nginx/ssl/nginx.crt:/etc/nginx/ssl/nginx.crt
      - ./config/nginx/ssl/nginx.key:/etc/nginx/ssl/nginx.key
    depends_on:
      - gunicorn
      - daphne
    networks:
      - web_network
networks:
  web_network:
    driver: bridge
  db_network:
    driver: bridge

volumes:
  media-volume:
  static-volume:
